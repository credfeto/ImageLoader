name: .NET Core

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Fetch tags and master
      run: |
          git fetch --tags
          git branch --create-reflog master origin/master
          echo REF: $GITHUB_REF
          echo SHA: $GITHUB_SHA
          echo ::set-env name=GIT_BRANCH::$GITHUB_REF
    - name: Determine .net core version
      uses: credfeto/action-dotnet-version-detect@v1.0
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v2
      with:
        token: ${{secrets.github_token}}
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Enable dotnet tools
      run: dotnet new tool-manifest
    - name: Install Build Version Tool
      run: dotnet tool install --local FunFair.BuildVersion --add-source ${{ secrets.FUNFAIR_NUGET_FEED }}
    - name: Install Multi-Push Tool
      run: dotnet tool install --local Credfeto.Package.Push
    - name: Set Define Build Version
      run: dotnet buildversion  ${{ steps.buildnumber.outputs.build_number }} 
    - name: Build with dotnet
      run: |
        cd src
        dotnet build --configuration Release /p:Version=${{ env.BUILD_VERSION }}
    - name: Test dotnet
      run: |
        cd src
        dotnet test --configuration Release /p:Version=${{ env.BUILD_VERSION }} --no-build --no-restore
    - name: Pack
      run: |
         cd src
         dotnet pack --configuration Release -o dist /p:Version=${{ env.BUILD_VERSION }} --no-build --no-restore
    - name: Publish
      run: |
        dotnet pushpackages -folder src/dist --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ secrets.NUGET_FEED }}
