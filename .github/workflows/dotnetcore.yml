name: .NET Core

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Fetch tags and master
      run: |
          git fetch --tags
          git branch --create-reflog master origin/master
          echo REF: $GITHUB_REF
          echo SHA: $GITHUB_SHA
          echo ::set-env name=GIT_BRANCH::$GITHUB_REF
    - name: Determine .net core version
      run: |
          echo .NET Core Version: `sed -n 's|.*"version":\s*"\([^"]*\)".*|\1|p' src/global.json`
          echo ::set-env name=DOTNET_VERSION::`sed -n 's|.*"version":\s*"\([^"]*\)".*|\1|p' src/global.json`
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v2
      with:
        token: ${{secrets.github_token}}
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Setup Nuget
      run: sudo apt-get install nuget
    - name: Install Build Version Tool
      run: nuget install FunFair.BuildVersion -ExcludeVersion -Source ${{ secrets.FUNFAIR_NUGET_FEED }}
    - name: Set Define Build Version
      run: dotnet FunFair.BuildVersion/lib/BuildVersion.dll  ${{ steps.buildnumber.outputs.build_number }} 
    - name: Build with dotnet
      run: |
        cd src
        dotnet build --configuration Release /p:Version=${{ env.BUILD_VERSION }}
    - name: Pack tool 
      run: |
         cd src
         dotnet pack --configuration Release -o dist /p:Version=${{ env.BUILD_VERSION }}
    - name: Test dotnet
      run: |
        cd src
        dotnet test --configuration Release /p:Version=${{ env.BUILD_VERSION }}
    - name: publish
      run: dotnet nuget push dist/src/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/credfeto/index.json
